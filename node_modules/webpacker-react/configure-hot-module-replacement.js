'use strict';

var _webpack = require('webpack');

var _webpack2 = _interopRequireDefault(_webpack);

var _webpackMerge = require('webpack-merge');

var _webpackMerge2 = _interopRequireDefault(_webpackMerge);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function configureHotModuleReplacement(originalConfig) {
  var config = (0, _webpackMerge2.default)(originalConfig, {
    plugins: [new _webpack2.default.NamedModulesPlugin()]
  });

  config.module.rules = config.module.rules.map(function (rule) {
    if (rule.loader === 'babel-loader') {
      return (0, _webpackMerge2.default)(rule, { options: { plugins: ['react-hot-loader/babel'] } });
    }
    return rule;
  });

  Object.keys(config.entry).forEach(function (key) {
    if (!(config.entry[key] instanceof Array)) {
      config.entry[key] = [config.entry[key]];
    }
    config.entry[key].unshift('react-hot-loader/patch');
  });
  return config;
}

module.exports = configureHotModuleReplacement;